Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/screens/OrderDetailsScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _redux = require('redux');

var _reactNavigation = require('react-navigation');

var _reactRedux = require('react-redux');

var _actions = require('../actions/actions.js');

var Actions = _interopRequireWildcard(_actions);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  OrderDetailsScreen: {
    displayName: 'OrderDetailsScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/screens/OrderDetailsScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

function mapStateToProps(state) {
  return {
    name: state.packages.name,
    description: state.packages.description,
    price: state.packages.price,
    discount: state.packages.discount,
    type: state.packages.type,
    value: state.packages.value,
    token: state.login.token,
    shortcode: state.packages.shortcode,
    response: state.packages.response.status
  };
}
function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(Actions, dispatch);
}

var OrderDetailsScreen = _wrapComponent('OrderDetailsScreen')(function (_Component) {
  _inherits(OrderDetailsScreen, _Component);

  function OrderDetailsScreen(props) {
    _classCallCheck(this, OrderDetailsScreen);

    var _this = _possibleConstructorReturn(this, (OrderDetailsScreen.__proto__ || Object.getPrototypeOf(OrderDetailsScreen)).call(this, props));

    _this.state = {
      name: _this.props.name,
      description: _this.props.description,
      price: _this.props.price,
      discount: _this.props.discount,
      type: _this.props.type,
      value: _this.props.value,
      bearerToken: _this.props.token,
      shortcode: _this.props.shortcode,
      response: _this.props.response,
      coupon: false,
      savings: '',
      orderComplete: false
    };
    return _this;
  }

  _createClass(OrderDetailsScreen, [{
    key: '_onDiscount',
    value: function _onDiscount() {
      var _this2 = this;

      this.props.requestDiscount({ discount: this.state.discount }).then(function () {
        if (_this2.props.type == 'percent') {
          _this2.setState({ savings: parseFloat(_this2.props.value).toFixed(2) / 100 * parseFloat(_this2.props.price).toFixed(2) });
          _this2.props.updatePrice({ price: parseFloat(_this2.props.price).toFixed(2) - parseFloat(_this2.props.value).toFixed(2) / 100 * parseFloat(_this2.props.price).toFixed(2) });
          _this2.setState({ coupon: true });
        } else if (_this2.props.type == 'amount') {
          _this2.setState({ savings: parseFloat(_this2.props.value).toFixed(2) });
          _this2.props.updatePrice({ price: parseFloat(_this2.props.price).toFixed(2) - parseFloat(_this2.props.value).toFixed(2) });
          _this2.setState({ coupon: true });
        } else {
          _this2.props.discountSuccess({ type: 'invalid' });
        }
      });
    }
  }, {
    key: '_submitOrder',
    value: function _submitOrder() {
      var _this3 = this;

      this.props.submitOrder({ bearerToken: this.state.bearerToken, shortcode: this.state.shortcode }).then(function () {
        if (_this3.props.response == 200) {
          _this3.setState({ orderComplete: true });
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 76
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.header, __source: {
              fileName: _jsxFileName,
              lineNumber: 77
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.headerText, __source: {
                fileName: _jsxFileName,
                lineNumber: 78
              }
            },
            'Discount Code'
          )
        ),
        _react3.default.createElement(_reactNativeElements.FormInput, {
          value: this.state.discount,
          placeholder: 'Please enter your discount code',
          onChangeText: function onChangeText(newText) {
            return _this4.setState({ discount: newText });
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80
          }
        }),
        this.props.type == 'invalid' && _react3.default.createElement(
          _reactNativeElements.FormValidationMessage,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 85
            }
          },
          'Invalid discount code'
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 86
            }
          },
          _react3.default.createElement(_reactNativeElements.Button, {
            raised: true,
            title: 'Apply Code',
            disabled: !this.state.discount || this.state.coupon == true,
            onPress: this._onDiscount.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 87
            }
          })
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.header, __source: {
              fileName: _jsxFileName,
              lineNumber: 94
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.headerText, __source: {
                fileName: _jsxFileName,
                lineNumber: 95
              }
            },
            'Order Details:  ',
            this.props.name
          )
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 97
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.containerText, __source: {
                fileName: _jsxFileName,
                lineNumber: 98
              }
            },
            'Sub-total:                                                        $',
            parseFloat(this.state.price).toFixed(2)
          )
        ),
        this.state.coupon == true && _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 100
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.savingsText, __source: {
                fileName: _jsxFileName,
                lineNumber: 100
              }
            },
            'Savings: -$',
            parseFloat(this.state.savings).toFixed(2)
          )
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 101
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.containerText, __source: {
                fileName: _jsxFileName,
                lineNumber: 102
              }
            },
            'Tax:                                                                     $0.00'
          )
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 104
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.containerText, __source: {
                fileName: _jsxFileName,
                lineNumber: 105
              }
            },
            'Total:                                                                $',
            parseFloat(this.props.price).toFixed(2)
          )
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.button, __source: {
              fileName: _jsxFileName,
              lineNumber: 107
            }
          },
          _react3.default.createElement(_reactNativeElements.Button, {
            raised: true,
            title: 'Submit Order',
            disabled: this.state.orderComplete == true,
            onPress: this._submitOrder.bind(this),
            __source: {
              fileName: _jsxFileName,
              lineNumber: 108
            }
          }),
          this.state.orderComplete == true && _react3.default.createElement(
            _reactNativeElements.FormValidationMessage,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 114
              }
            },
            'Your order has been completed!'
          )
        )
      );
    }
  }]);

  return OrderDetailsScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'flex-start',
    paddingTop: 20,
    paddingBottom: 20,
    paddingLeft: 20,
    borderRadius: 4,
    borderWidth: 0.5,
    borderColor: '#d6d7da'
  },
  header: {
    paddingTop: 20,
    paddingBottom: 20,
    backgroundColor: '#231f61'
  },
  containerText: {
    fontWeight: 'bold'
  },
  headerText: {
    fontWeight: 'bold',
    color: 'white'
  },
  savingsText: {
    fontWeight: 'bold',
    fontStyle: 'italic'
  },
  button: {
    paddingBottom: 20
  }
});

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(OrderDetailsScreen);