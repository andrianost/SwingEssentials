Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/screens/IndividualLessonsScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _redux = require('redux');

var _reactNavigation = require('react-navigation');

var _reactRedux = require('react-redux');

var _actions = require('../actions/actions.js');

var Actions = _interopRequireWildcard(_actions);

var _reactNativeVideoPlayer = require('react-native-video-player');

var _reactNativeVideoPlayer2 = _interopRequireDefault(_reactNativeVideoPlayer);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  IndividualLessonsScreen: {
    displayName: 'IndividualLessonsScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/screens/IndividualLessonsScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

function mapStateToProps(state) {
  return {
    lessons: state.lessons,
    pending: state.lessons.pending,
    closed: state.lessons.closed,
    request_id: state.lessons.request_id,
    request_date: state.lessons.request_date,
    request_url: state.lessons.request_url,
    request_notes: state.lessons.request_notes,
    response_notes: state.lessons.response_notes
  };
}
function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(Actions, dispatch);
}

var IndividualLessonsScreen = _wrapComponent('IndividualLessonsScreen')(function (_Component) {
  _inherits(IndividualLessonsScreen, _Component);

  function IndividualLessonsScreen(props) {
    _classCallCheck(this, IndividualLessonsScreen);

    var _this = _possibleConstructorReturn(this, (IndividualLessonsScreen.__proto__ || Object.getPrototypeOf(IndividualLessonsScreen)).call(this, props));

    _this.state = {
      lessons: _this.props.lessons,
      pending: _this.props.pending,
      closed: _this.props.closed,
      request_id: _this.props.request_id,
      request_date: _this.props.request_date,
      request_url: _this.props.request_url,
      request_notes: _this.props.request_notes,
      response_notes: _this.props.response_notes
    };
    return _this;
  }

  _createClass(IndividualLessonsScreen, [{
    key: 'render',
    value: function render() {
      console.log(this.props.request_id);
      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 51
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 52
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: { fontSize: 25 }, __source: {
                fileName: _jsxFileName,
                lineNumber: 53
              }
            },
            this.props.request_date
          )
        ),
        _react3.default.createElement(
          _reactNative.View,
          {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 55
            }
          },
          _react3.default.createElement(_reactNativeVideoPlayer2.default, {
            __source: {
              fileName: _jsxFileName,
              lineNumber: 56
            }
          })
        ),
        _react3.default.createElement(
          _reactNative.View,
          { style: styles.container, __source: {
              fileName: _jsxFileName,
              lineNumber: 58
            }
          },
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.notes, __source: {
                fileName: _jsxFileName,
                lineNumber: 59
              }
            },
            'Comments'
          ),
          _react3.default.createElement(
            _reactNative.Text,
            { style: styles.border, __source: {
                fileName: _jsxFileName,
                lineNumber: 60
              }
            },
            this.props.response_notes
          )
        )
      );
    }
  }]);

  return IndividualLessonsScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    paddingTop: 25,
    paddingBottom: 10
  },
  border: {
    borderColor: 'black',
    borderWidth: 1,
    paddingTop: 50,
    paddingBottom: 50,
    paddingLeft: 150,
    paddingRight: 150
  },
  notes: {
    fontWeight: 'bold',
    fontSize: 25
  }
});

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(IndividualLessonsScreen);