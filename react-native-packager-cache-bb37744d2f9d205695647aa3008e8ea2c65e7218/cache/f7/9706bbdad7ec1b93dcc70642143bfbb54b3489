'use strict';

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../../react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/node_modules/react-native-accordion/src/index.js';

var _reactTweenState = require('react-tween-state');

var _reactTweenState2 = _interopRequireDefault(_reactTweenState);

var _reactNative = require('react-native');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _components = {
  _component: {}
};

var _reactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/node_modules/react-native-accordion/src/index.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _reactTransformHmrLibIndexJs2(Component, id);
  };
}

var Accordion = _wrapComponent('_component')(_react3.default.createClass({
  displayName: 'Accordion',

  mixins: [_reactTweenState2.default.Mixin],

  propTypes: {
    activeOpacity: _react3.default.PropTypes.number,
    animationDuration: _react3.default.PropTypes.number,
    content: _react3.default.PropTypes.element.isRequired,
    easing: _react3.default.PropTypes.string,
    expanded: _react3.default.PropTypes.bool,
    header: _react3.default.PropTypes.element.isRequired,
    onPress: _react3.default.PropTypes.func,
    underlayColor: _react3.default.PropTypes.string,
    style: _react3.default.PropTypes.object
  },

  getDefaultProps: function getDefaultProps() {
    return {
      activeOpacity: 1,
      animationDuration: 300,
      easing: 'linear',
      expanded: false,
      underlayColor: '#000',
      style: {}
    };
  },
  getInitialState: function getInitialState() {
    return {
      is_visible: false,
      height: 0,
      content_height: 0
    };
  },
  close: function close() {
    this.state.is_visible && this.toggle();
  },
  open: function open() {
    !this.state.is_visible && this.toggle();
  },
  toggle: function toggle() {
    this.state.is_visible = !this.state.is_visible;

    this.tweenState('height', {
      easing: _reactTweenState2.default.easingTypes[this.props.easing],
      duration: this.props.animationDuration,
      endValue: this.state.height === 0 ? this.state.content_height : 0
    });
  },
  _onPress: function _onPress() {
    this.toggle();

    if (this.props.onPress) {
      this.props.onPress.call(this);
    }
  },
  _getContentHeight: function _getContentHeight() {
    var _this = this;

    if (this.refs.AccordionContent) {
      this.refs.AccordionContent.measure(function (ox, oy, width, height, px, py) {
        _this.setState({
          height: _this.props.expanded ? height : 0,
          content_height: height
        });
      });
    }
  },
  componentDidMount: function componentDidMount() {
    setTimeout(this._getContentHeight);
  },
  render: function render() {
    return _react3.default.createElement(
      _reactNative.View,
      {
        style: {
          overflow: 'hidden'
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 95
        }
      },
      _react3.default.createElement(
        _reactNative.TouchableHighlight,
        {
          ref: 'AccordionHeader',
          onPress: this._onPress,
          underlayColor: this.props.underlayColor,
          style: this.props.style,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 100
          }
        },
        this.props.header
      ),
      _react3.default.createElement(
        _reactNative.View,
        {
          ref: 'AccordionContentWrapper',
          style: {
            height: this.getTweeningValue('height')
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 108
          }
        },
        _react3.default.createElement(
          _reactNative.View,
          { ref: 'AccordionContent', __source: {
              fileName: _jsxFileName,
              lineNumber: 114
            }
          },
          this.props.content
        )
      )
    );
  }
}));

module.exports = Accordion;