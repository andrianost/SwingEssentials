Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/screens/YourLessonsScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _redux = require('redux');

var _reactNavigation = require('react-navigation');

var _reactRedux = require('react-redux');

var _actions = require('../actions/actions.js');

var Actions = _interopRequireWildcard(_actions);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  YourLessonsScreen: {
    displayName: 'YourLessonsScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/screens/YourLessonsScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

function mapStateToProps(state) {
  return {
    token: state.login.token,
    pending: state.lessons.pending,
    closed: state.lessons.closed
  };
}
function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(Actions, dispatch);
}

var YourLessonsScreen = _wrapComponent('YourLessonsScreen')(function (_Component) {
  _inherits(YourLessonsScreen, _Component);

  function YourLessonsScreen(props) {
    _classCallCheck(this, YourLessonsScreen);

    var _this = _possibleConstructorReturn(this, (YourLessonsScreen.__proto__ || Object.getPrototypeOf(YourLessonsScreen)).call(this, props));

    _this.state = {
      bearerToken: _this.props.token,
      pending: _this.props.pending,
      closed: _this.props.closed
    };
    return _this;
  }

  _createClass(YourLessonsScreen, [{
    key: '_getLessons',
    value: function _getLessons() {
      this.props.requestLessons({ bearerToken: this.state.bearerToken });
    }
  }, {
    key: '_renderItem',
    value: function _renderItem(_ref) {
      var item = _ref.item,
          index = _ref.index;

      return _react3.default.createElement(_reactNativeElements.ListItem, {
        key: index,
        title: item.request_date,
        subtitle: item.request_id,
        __source: {
          fileName: _jsxFileName,
          lineNumber: 40
        }
      });
    }
  }, {
    key: '_pendingHeader',
    value: function _pendingHeader() {
      return _react3.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 50
          }
        },
        'Pending'
      );
    }
  }, {
    key: '_closedHeader',
    value: function _closedHeader() {
      return _react3.default.createElement(
        _reactNative.Text,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 56
          }
        },
        'Closed'
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 62
          }
        },
        _react3.default.createElement(_reactNative.Button, {
          title: 'Get Lessons',
          onPress: function onPress() {
            return _this2._getLessons();
          },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 63
          }
        }),
        _react3.default.createElement(_reactNative.FlatList, {
          data: this.props.pending,
          keyExtractor: function keyExtractor(item) {
            return item.request_id;
          },
          renderItem: this._renderItem,
          ListHeaderComponent: this._pendingHeader,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 67
          }
        }),
        _react3.default.createElement(_reactNative.FlatList, {
          data: this.props.closed,
          keyExtractor: function keyExtractor(item) {
            return item.request_id;
          },
          renderItem: this._renderItem,
          ListHeaderComponent: this._closedHeader,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 80
          }
        })
      );
    }
  }]);

  return YourLessonsScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  icon: {
    width: 24,
    height: 24
  },
  container: {
    alignItems: 'center',
    paddingTop: 50
  }
});

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(YourLessonsScreen);