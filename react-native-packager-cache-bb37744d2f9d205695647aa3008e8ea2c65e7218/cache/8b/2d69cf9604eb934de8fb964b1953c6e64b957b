Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/screens/OrderLessonsScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _redux = require('redux');

var _reactNavigation = require('react-navigation');

var _reactRedux = require('react-redux');

var _actions = require('../actions/actions.js');

var Actions = _interopRequireWildcard(_actions);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  OrderLessonsScreen: {
    displayName: 'OrderLessonsScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/screens/OrderLessonsScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

function mapStateToProps(state) {
  return {
    packages: state.packages,
    name: state.packages.name,
    description: state.packages.description,
    price: state.packages.price
  };
}
function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(Actions, dispatch);
}

var OrderLessonsScreen = _wrapComponent('OrderLessonsScreen')(function (_Component) {
  _inherits(OrderLessonsScreen, _Component);

  function OrderLessonsScreen(props) {
    _classCallCheck(this, OrderLessonsScreen);

    var _this = _possibleConstructorReturn(this, (OrderLessonsScreen.__proto__ || Object.getPrototypeOf(OrderLessonsScreen)).call(this, props));

    _this.state = {
      packages: _this.props.packages,
      name: _this.props.name,
      description: _this.props.description,
      price: _this.props.price
    };
    return _this;
  }

  _createClass(OrderLessonsScreen, [{
    key: '_orderLessons',
    value: function _orderLessons(data) {
      this.props.orderLessons(data);
      this.props.navigation.navigate('OrderDetailsScreen');
    }
  }, {
    key: '_packagesHeader',
    value: function _packagesHeader() {
      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 41
          }
        },
        _react3.default.createElement(
          _reactNative.Text,
          { style: { color: "white", fontWeight: "bold" }, __source: {
              fileName: _jsxFileName,
              lineNumber: 42
            }
          },
          'Available Packages'
        )
      );
    }
  }, {
    key: '_renderItem',
    value: function _renderItem(_ref) {
      var _this2 = this;

      var item = _ref.item,
          index = _ref.index;

      return _react3.default.createElement(_reactNativeElements.ListItem, {
        containerStyle: { height: 80, justifyContent: 'center', backgroundColor: 'powderblue' },
        titleStyle: { fontSize: 18 },
        rightTitleStyle: { fontWeight: 'bold', color: 'black' },
        key: index,
        title: item.name,
        subtitle: item.description,
        rightTitle: item.price,
        onPress: function onPress() {
          return _this2._orderLessons({ name: item.name, description: item.description, price: item.price });
        },
        __source: {
          fileName: _jsxFileName,
          lineNumber: 49
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react3.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 64
          }
        },
        _react3.default.createElement(_reactNative.FlatList, {
          data: this.props.packages.packages,
          keyExtractor: function keyExtractor(item) {
            return item.count;
          },
          renderItem: this._renderItem.bind(this),
          ListHeaderComponent: this._packagesHeader,
          __source: {
            fileName: _jsxFileName,
            lineNumber: 65
          }
        })
      );
    }
  }]);

  return OrderLessonsScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    paddingTop: 20,
    paddingBottom: 20,
    backgroundColor: '#231f61'
  }
});

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(OrderLessonsScreen);