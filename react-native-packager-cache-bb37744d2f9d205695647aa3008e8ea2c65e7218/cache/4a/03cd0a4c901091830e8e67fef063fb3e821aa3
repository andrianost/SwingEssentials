Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/screens/SettingsScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _redux = require('redux');

var _reactNavigation = require('react-navigation');

var _reactRedux = require('react-redux');

var _actions = require('../actions/actions.js');

var Actions = _interopRequireWildcard(_actions);

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  SettingsScreen: {
    displayName: 'SettingsScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/screens/SettingsScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

function mapStateToProps(state) {
  return {
    handedness: state.settings.handedness,
    duration: state.settings.camera.duration,
    delay: state.settings.camera.delay,
    overlay: state.settings.camera.overlay
  };
}

function mapDispatchToProps(dispatch) {
  return (0, _redux.bindActionCreators)(Actions, dispatch);
}

var list = [{
  title: 'User Data',
  page: 'UserData'
}, {
  title: 'Camera Data',
  page: 'CameraData'
}];

var SettingsScreen = _wrapComponent('SettingsScreen')(function (_Component) {
  _inherits(SettingsScreen, _Component);

  function SettingsScreen() {
    _classCallCheck(this, SettingsScreen);

    return _possibleConstructorReturn(this, (SettingsScreen.__proto__ || Object.getPrototypeOf(SettingsScreen)).apply(this, arguments));
  }

  _createClass(SettingsScreen, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNativeElements.List,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 38
          }
        },
        list.map(function (item, i) {
          return _react3.default.createElement(_reactNativeElements.ListItem, {
            key: i,
            title: item.title,
            onPress: function onPress() {
              return _this2.props.navigation.navigate(item.page);
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 41
            }
          });
        })
      );
    }
  }]);

  return SettingsScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    alignItems: 'center',
    paddingTop: 50
  },
  header: {
    width: 400,
    height: 120,
    backgroundColor: 'grey',
    flexDirection: 'row'
  },
  content: {
    width: 400,
    height: 120,
    backgroundColor: 'grey',
    flexDirection: 'row',
    justifyContent: 'space-between'
  }
});

exports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)(SettingsScreen);