Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class,
    _temp,
    _jsxFileName = '/Users/andrianost/projects/SwingEssentials/Navigation.js';

var _reactNative = require('react-native');

var _reactNativeElements = require('react-native-elements');

var _reactNavigation = require('react-navigation');

var _LoginScreen = require('./LoginScreen');

var _LoginScreen2 = _interopRequireDefault(_LoginScreen);

var _YourLessonsScreen = require('./YourLessonsScreen');

var _YourLessonsScreen2 = _interopRequireDefault(_YourLessonsScreen);

var _RedeemLessonsScreen = require('./RedeemLessonsScreen');

var _RedeemLessonsScreen2 = _interopRequireDefault(_RedeemLessonsScreen);

var _OrderLessonsScreen = require('./OrderLessonsScreen');

var _OrderLessonsScreen2 = _interopRequireDefault(_OrderLessonsScreen);

var _AboutScreen = require('./AboutScreen');

var _AboutScreen2 = _interopRequireDefault(_AboutScreen);

var _HelpScreen = require('./HelpScreen');

var _HelpScreen2 = _interopRequireDefault(_HelpScreen);

var _SettingsScreen = require('./SettingsScreen');

var _SettingsScreen2 = _interopRequireDefault(_SettingsScreen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  Navigation: {
    displayName: 'Navigation'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/Users/andrianost/projects/SwingEssentials/Navigation.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var Navigation = _wrapComponent('Navigation')((_temp = _class = function (_React$Component) {
  _inherits(Navigation, _React$Component);

  function Navigation() {
    _classCallCheck(this, Navigation);

    return _possibleConstructorReturn(this, (Navigation.__proto__ || Object.getPrototypeOf(Navigation)).apply(this, arguments));
  }

  _createClass(Navigation, [{
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 27
          }
        },
        _react3.default.createElement(_reactNativeElements.Button, {
          buttonStyle: { height: 50, width: 80, backgroundColor: 'white' },
          onPress: function onPress() {
            return _this2.props.navigation.navigate('DrawerOpen');
          },
          icon: { name: 'dehaze', color: 'black', size: 50 },
          __source: {
            fileName: _jsxFileName,
            lineNumber: 28
          }
        })
      );
    }
  }]);

  return Navigation;
}(_react3.default.Component), _class.navigationOptions = {
  drawerLabel: 'Home',
  drawerIcon: function drawerIcon(_ref) {
    var tintColor = _ref.tintColor;
    return _react3.default.createElement(_reactNative.Image, {
      source: require('./img/chats-icon.png'),
      style: [styles.icon, { tintColor: tintColor }],
      __source: {
        fileName: _jsxFileName,
        lineNumber: 18
      }
    });
  }
}, _temp));

exports.default = Navigation;

var styles = _reactNative.StyleSheet.create({
  icon: {
    width: 24,
    height: 24
  },
  container: {
    paddingTop: 30
  }
});

var Nav = (0, _reactNavigation.DrawerNavigator)({

  YourLessonsScreen: {
    screen: _YourLessonsScreen2.default
  },
  RedeemLessonsScreen: {
    screen: _RedeemLessonsScreen2.default
  },
  OrderLessonsScreen: {
    screen: _OrderLessonsScreen2.default
  },
  HelpScreen: {
    screen: _HelpScreen2.default
  },
  AboutScreen: {
    screen: _AboutScreen2.default
  },
  SettingsScreen: {
    screen: _SettingsScreen2.default
  }
});

_reactNative.AppRegistry.registerComponent('SwingEssentials', function () {
  return Navigation;
});