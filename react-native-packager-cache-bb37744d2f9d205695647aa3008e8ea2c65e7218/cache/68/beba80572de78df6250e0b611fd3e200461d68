Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.AppNavigator = undefined;

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _jsxFileName = '/Users/andrianost/projects/SwingEssentials/navigators/AppNavigator.js';

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _reactRedux = require('react-redux');

var _reactNavigation = require('react-navigation');

var _reactNative = require('react-native');

var _MaterialIcons = require('@expo/vector-icons/MaterialIcons');

var _MaterialIcons2 = _interopRequireDefault(_MaterialIcons);

var _navigationRoutes = require('../config/navigationRoutes.js');

var _navigationRoutes2 = _interopRequireDefault(_navigationRoutes);

var _HomeScreen = require('../screens/HomeScreen.js');

var _HomeScreen2 = _interopRequireDefault(_HomeScreen);

var _YourLessonsScreen = require('../screens/YourLessonsScreen.js');

var _YourLessonsScreen2 = _interopRequireDefault(_YourLessonsScreen);

var _RedeemLessonsScreen = require('../screens/RedeemLessonsScreen.js');

var _RedeemLessonsScreen2 = _interopRequireDefault(_RedeemLessonsScreen);

var _OrderLessonsScreen = require('../screens/OrderLessonsScreen.js');

var _OrderLessonsScreen2 = _interopRequireDefault(_OrderLessonsScreen);

var _AboutScreen = require('../screens/AboutScreen.js');

var _AboutScreen2 = _interopRequireDefault(_AboutScreen);

var _HelpScreen = require('../screens/HelpScreen.js');

var _HelpScreen2 = _interopRequireDefault(_HelpScreen);

var _SettingsScreen = require('../screens/SettingsScreen.js');

var _SettingsScreen2 = _interopRequireDefault(_SettingsScreen);

var _LoginScreen = require('../screens/LoginScreen.js');

var _LoginScreen2 = _interopRequireDefault(_LoginScreen);

var _UserData = require('../screens/UserData.js');

var _UserData2 = _interopRequireDefault(_UserData);

var _CameraData = require('../screens/CameraData.js');

var _CameraData2 = _interopRequireDefault(_CameraData);

var _IndividualLessonsScreen = require('../screens/IndividualLessonsScreen.js');

var _IndividualLessonsScreen2 = _interopRequireDefault(_IndividualLessonsScreen);

var _OrderDetailsScreen = require('../screens/OrderDetailsScreen.js');

var _OrderDetailsScreen2 = _interopRequireDefault(_OrderDetailsScreen);

var _CustomDrawer = require('../screens/CustomDrawer.js');

var _CustomDrawer2 = _interopRequireDefault(_CustomDrawer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
    AppWithNavigationState: {
        displayName: 'AppWithNavigationState'
    }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: '/Users/andrianost/projects/SwingEssentials/navigators/AppNavigator.js',
    components: _components,
    locals: [module],
    imports: [_react3.default]
});

function _wrapComponent(id) {
    return function (Component) {
        return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
}

function mapStateToProps(state) {
    return {
        username: state.userData.username,
        firstName: state.userData.firstName
    };
}
function mapDispatchToProps(dispatch) {
    return bindActionCreators(Actions, dispatch);
}

var AppNavigator = exports.AppNavigator = (0, _reactNavigation.DrawerNavigator)({
    Login: {
        screen: _LoginScreen2.default,
        navigationOptions: true ? {
            drawerLabel: function drawerLabel() {
                return null;
            } } : {}
    },
    Home: {
        screen: (0, _reactNavigation.StackNavigator)({
            Home: {
                screen: _HomeScreen2.default,
                navigationOptions: function navigationOptions(_ref) {
                    var navigation = _ref.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 49
                            }
                        }) };
                }
            }
        }),
        navigationOptions: {
            drawerLabel: 'Home'
        }
    },

    YourLessons: {
        screen: (0, _reactNavigation.StackNavigator)({
            YourLessons: {
                screen: _YourLessonsScreen2.default,
                navigationOptions: function navigationOptions(_ref2) {
                    var navigation = _ref2.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 66
                            }
                        })
                    };
                }
            },
            IndividualLessonsScreen: {
                screen: _IndividualLessonsScreen2.default,
                navigationOptions: function navigationOptions(_ref3) {
                    var navigation = _ref3.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'navigate-before', size: 24, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('YourLessons');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 74
                            }
                        })
                    };
                }
            }
        }, {
            initialRouteName: 'YourLessons',
            contentOptions: { activeTintColor: '#231f61' }
        }),
        navigationOptions: {
            drawerLabel: 'Your Lessons'
        }
    },
    RedeemLessons: {
        screen: (0, _reactNavigation.StackNavigator)({
            RedeemLessons: {
                screen: _RedeemLessonsScreen2.default,
                navigationOptions: function navigationOptions(_ref4) {
                    var navigation = _ref4.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 93
                            }
                        })
                    };
                }
            }
        }, {
            initialRouteName: 'RedeemLessons',
            contentOptions: { activeTintColor: '#231f61' }
        }),
        navigationOptions: {
            drawerLabel: 'Redeem Lessons'
        }
    },
    OrderLessons: {
        screen: (0, _reactNavigation.StackNavigator)({
            OrderLessons: {
                screen: _OrderLessonsScreen2.default,
                navigationOptions: function navigationOptions(_ref5) {
                    var navigation = _ref5.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 24, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 112
                            }
                        })
                    };
                }
            },
            OrderDetailsScreen: {
                screen: _OrderDetailsScreen2.default,
                navigationOptions: function navigationOptions(_ref6) {
                    var navigation = _ref6.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'navigate-before', size: 24, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('OrderLessons');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 120
                            }
                        })
                    };
                }
            }
        }),
        navigationOptions: {
            drawerLabel: 'Order Lessons'
        }
    },

    Help: {
        screen: (0, _reactNavigation.StackNavigator)({
            HelpScreen: {
                screen: _HelpScreen2.default,
                navigationOptions: function navigationOptions(_ref7) {
                    var navigation = _ref7.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 137
                            }
                        })
                    };
                }
            }
        }),
        navigationOptions: {
            drawerLabel: 'Help'
        }
    },
    About: {
        screen: (0, _reactNavigation.StackNavigator)({
            AboutScreen: {
                screen: _AboutScreen2.default,
                navigationOptions: function navigationOptions(_ref8) {
                    var navigation = _ref8.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 153
                            }
                        })
                    };
                }
            }
        }),
        navigationOptions: {
            drawerLabel: 'About'
        }
    },
    Settings: {
        screen: (0, _reactNavigation.StackNavigator)({
            SettingsScreen: {
                screen: _SettingsScreen2.default,
                navigationOptions: function navigationOptions(_ref9) {
                    var navigation = _ref9.navigation;
                    return {
                        title: 'Swing Essentials',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'dehaze', size: 30, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('DrawerOpen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 169
                            }
                        })
                    };
                }
            },
            UserData: {
                screen: _UserData2.default,
                navigationOptions: function navigationOptions(_ref10) {
                    var navigation = _ref10.navigation;
                    return {
                        title: 'User Data',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'navigate-before', size: 24, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('SettingsScreen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 177
                            }
                        })
                    };
                }
            },
            CameraData: {
                screen: _CameraData2.default,
                navigationOptions: function navigationOptions(_ref11) {
                    var navigation = _ref11.navigation;
                    return {
                        title: 'Camera Data',
                        headerStyle: { backgroundColor: '#d3d3d3' },
                        headerLeft: _react3.default.createElement(_MaterialIcons2.default, { name: 'navigate-before', size: 24, style: { color: '#231f61' }, onPress: function onPress() {
                                return navigation.navigate('SettingsScreen');
                            }, __source: {
                                fileName: _jsxFileName,
                                lineNumber: 185
                            }
                        })
                    };
                }
            }
        }),
        navigationOptions: {
            drawerLabel: 'Settings'
        }
    }
}, {
    initialRouteName: 'Login',
    drawerBackgroundColor: '#f2f2f2',
    contentOptions: { activeTintColor: '#231f61' },
    contentComponent: _CustomDrawer2.default
});

var AppWithNavigationState = _wrapComponent('AppWithNavigationState')(function (_React$Component) {
    _inherits(AppWithNavigationState, _React$Component);

    function AppWithNavigationState() {
        _classCallCheck(this, AppWithNavigationState);

        return _possibleConstructorReturn(this, (AppWithNavigationState.__proto__ || Object.getPrototypeOf(AppWithNavigationState)).apply(this, arguments));
    }

    _createClass(AppWithNavigationState, [{
        key: 'render',
        value: function render() {
            return _react3.default.createElement(AppNavigator, {
                navigation: (0, _reactNavigation.addNavigationHelpers)({
                    dispatch: this.props.dispatch,
                    state: this.props.nav
                }),
                __source: {
                    fileName: _jsxFileName,
                    lineNumber: 214
                }
            });
        }
    }]);

    return AppWithNavigationState;
}(_react3.default.Component));

var mapStateToProps = function mapStateToProps(state) {
    return {
        nav: state.nav
    };
};

exports.default = (0, _reactRedux.connect)(mapStateToProps)(AppWithNavigationState);